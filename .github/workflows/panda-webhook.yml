name: Playwright Tests

on:
  deployment_status:

jobs:
  run-e2es:
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success' && github.ref != 'refs/heads/main' && github.event.deployment_status.environment == 'staging'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci && npx playwright install --with-deps

      - name: Create PandaDoc Webhook (drpcrd-staging)
        id: pandadoc-webhook
        run: |
          RESPONSE=$(curl -X POST "https://api.pandadoc.com/public/v1/webhooks" \
          -H "Authorization: Bearer ${{ secrets.PANDADOC_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "drpcrd-staging",
            "url": "${{ github.event.deployment_status.environment_url }}/api/webhook/pandadoc",
            "event_types": [
              "document.creation_failed",
              "document.deleted",
              "document.section_added",
              "document.state_changed",
              "document.updated",
              "document.completed",
              "pdf.completed",
              "recipient.completed_document"
            ]
          }')

          SHARED_KEY=$(echo "$RESPONSE" | jq -r '.shared_key')
          echo "PANDADOC_WEBHOOK_SHARED_KEY=$SHARED_KEY" >> $GITHUB_ENV

      - name: Store PandaDoc Webhook Key in Vercel
        run: |
          curl -X PATCH "https://api.vercel.com/v9/projects/${{ secrets.VERCEL_PROJECT_ID }}/env/PANDADOC_WEBHOOK_SHARED_KEY" \
          -H "Authorization: Bearer ${{ secrets.VERCEL_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "value": "'${{ env.PANDADOC_WEBHOOK_SHARED_KEY }}'",
            "target": ["preview", "production"]
          }'

      - name: Restart Vercel Deployment to Load Env Variables
        run: |
          curl -X POST "https://api.vercel.com/v13/deployments" \
          -H "Authorization: Bearer ${{ secrets.VERCEL_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "name": "${{ secrets.VERCEL_PROJECT_ID }}",
            "target": "staging"
          }'

      - name: Wait for Deployment to Complete
        run: sleep 30 # Allow time for the environment variables to take effect

      - name: Run Playwright Tests
        env:
          BASE_URL: ${{ github.event.deployment_status.environment_url }}
        run: npx playwright test

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

      - name: GitHub Notification
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            github.issues.createComment({
              issue_number: 1,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "ðŸš¨ Playwright tests failed after deployment!"
            });
